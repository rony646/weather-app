[{"C:\\Users\\Rony\\Desktop\\clock-app\\src\\index.js":"1","C:\\Users\\Rony\\Desktop\\clock-app\\src\\App.js":"2","C:\\Users\\Rony\\Desktop\\clock-app\\src\\reportWebVitals.js":"3","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\MainPage.js":"4","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Quote\\Quote.js":"5","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Content\\Content.js":"6","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\SearchBar\\SearchBar.js":"7","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\LocationContext.js":"8","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\WeatherDataContext.js":"9","C:\\Users\\Rony\\Desktop\\clock-app\\src\\axios-config.js":"10","C:\\Users\\Rony\\Desktop\\clock-app\\src\\API-KEY.js":"11","C:\\Users\\Rony\\Desktop\\clock-app\\src\\utils\\backgrounds.js":"12","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\QuoteContext.js":"13","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\DetailsComponent\\DetailsComponent.js":"14","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\DetailsComponent\\WeatherCard\\WeatherCard.js":"15"},{"size":500,"mtime":1608773569226,"results":"16","hashOfConfig":"17"},{"size":971,"mtime":1611188839833,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607885306229,"results":"19","hashOfConfig":"17"},{"size":2159,"mtime":1611268770894,"results":"20","hashOfConfig":"17"},{"size":1380,"mtime":1611189826457,"results":"21","hashOfConfig":"17"},{"size":1312,"mtime":1611267424695,"results":"22","hashOfConfig":"17"},{"size":1667,"mtime":1611267468879,"results":"23","hashOfConfig":"17"},{"size":377,"mtime":1609981549538,"results":"24","hashOfConfig":"17"},{"size":451,"mtime":1611266762924,"results":"25","hashOfConfig":"17"},{"size":264,"mtime":1609120201332,"results":"26","hashOfConfig":"17"},{"size":57,"mtime":1609109589272,"results":"27","hashOfConfig":"17"},{"size":1289,"mtime":1609124338486,"results":"28","hashOfConfig":"17"},{"size":470,"mtime":1609981872892,"results":"29","hashOfConfig":"17"},{"size":2597,"mtime":1611283694442,"results":"30","hashOfConfig":"17"},{"size":501,"mtime":1611280693534,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1qq9r1h",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Rony\\Desktop\\clock-app\\src\\index.js",[],["70","71"],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\App.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\reportWebVitals.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\MainPage.js",["72"],"import React, { useContext } from 'react';\r\n\r\nimport Backgrounds from '../../utils/backgrounds';\r\nimport { WeatherDataContext } from '../../contexts/WeatherDataContext';\r\n\r\nimport Quote from './Quote/Quote';\r\nimport Content from './Content/Content'\r\n\r\n\r\nimport './MainPage.css';\r\n\r\nconst MainPage = props => {\r\n\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext);\r\n    let background = Backgrounds.rain;\r\n\r\n    if(weatherData) {\r\n        switch(weatherData.weather[0].main) {\r\n            case \"Clear\":\r\n                background = Backgrounds.clear;\r\n                break;\r\n            case \"Clouds\":\r\n                background = Backgrounds.clouds;\r\n                break;\r\n            case \"Dust\":\r\n                background = Backgrounds.dust;\r\n                break;\r\n            case \"Sand\":\r\n                background = Backgrounds.sand;\r\n                break;\r\n            case \"Fog\":\r\n                background = Backgrounds.fog;\r\n                break;\r\n            case \"Haze\":\r\n                background = Backgrounds.haze;\r\n                break;\r\n            case \"Smoke\":\r\n                background = Backgrounds.smoke;\r\n                break;\r\n            case \"Mist\":\r\n                background = Backgrounds.mist;\r\n                break;\r\n            case \"Snow\":\r\n                background = Backgrounds.snow;\r\n                break;\r\n            case \"Rain\":\r\n                background = Backgrounds.rain;\r\n                break;\r\n            case \"Drizzle\":\r\n                background = Backgrounds.drizzle;\r\n                break;\r\n            case \"Thunderstorm\":\r\n                background = Backgrounds.thunderstorm;\r\n                break;\r\n            default:\r\n                background = Backgrounds.clear;\r\n                break;\r\n\r\n        };\r\n    }; // Set the background depeding on the weather\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"main-page\" style={{backgroundImage: `url(${background})`}}>\r\n            <Quote showMore={props.showMore}/>\r\n            <Content setShowMore={props.setShowMore} showMore={props.showMore}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Quote\\Quote.js",["73","74"],"import React, { useContext, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEraser, faRedo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { QuoteContext } from '../../../contexts/QuoteContext';\r\n\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport axios from 'axios';\r\n\r\nimport './Quote.css';\r\n\r\nconst Quote = props => {\r\n\r\n    const [quote, setQuote] = useContext(QuoteContext);\r\n\r\n    const fetchNewQuote = () => {\r\n       axios.get('https://api.quotable.io/random')\r\n       .then(res => {\r\n           setQuote({\r\n               quote: res.data.content,\r\n               author: res.data.author\r\n           });\r\n       })\r\n       .catch(err => {\r\n           console.log(err);\r\n       })\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <div className=\"quote\">\r\n                <div>\r\n                    <q>{quote.quote}</q>\r\n                    <p className=\"author\">{quote.author}</p>\r\n                </div>\r\n                <FontAwesomeIcon \r\n                    icon={faRedo} \r\n                    size=\"lg\" \r\n                    style={{margin: \"0 10px 0 0 \"}} \r\n                    className=\"reload-icon\"\r\n                    onClick={fetchNewQuote}\r\n                />\r\n            </div>\r\n            <SearchBar />\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Quote;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Content\\Content.js",["75"],"import React, { useContext } from 'react';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { WeatherDataContext } from '../../../contexts/WeatherDataContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleUp, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Content.css';\r\n\r\nconst Content = props => {\r\n\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext);\r\n\r\n    if(!weatherData) {\r\n        return <div>Error</div>\r\n    }\r\n\r\n    return(\r\n        <AnimateOnChange>\r\n            <div className=\"content\">\r\n                <div className=\"weather-content\">\r\n                    <span>{weatherData.weather[0].description.toUpperCase()}</span>\r\n                    <span className=\"temperature\">{weatherData.main.temp.toFixed()}Â°</span>\r\n                    <span>IN {weatherData.name.toUpperCase()}, {weatherData.sys.country.toUpperCase()}</span>\r\n                </div>\r\n                <button className=\"button\" onClick={props.setShowMore}>\r\n                    <FontAwesomeIcon icon={props.showMore ? faArrowCircleDown : faArrowAltCircleUp} className=\"button-icon\" size=\"2x\" />\r\n                </button>\r\n            </div>\r\n        </AnimateOnChange>\r\n        \r\n    );\r\n};\r\n\r\nexport default Content;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\SearchBar\\SearchBar.js",["76","77","78"],"import React, { useContext, useState, useEffect} from 'react';\r\n\r\nimport axios from '../../../axios-config';\r\n\r\nimport { LocationContext } from '../../../contexts/LocationContext';\r\nimport { WeatherDataContext } from '../../../contexts/WeatherDataContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport './SearchBar.css'\r\n\r\nconst SearchBar = () => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('SÃ£o paulo');\r\n    const [location, setLocation] = useContext(LocationContext);\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext)\r\n\r\n    useEffect(() => {\r\n        axios.get(`weather?q=${location}`).\r\n        then(res => {\r\n            setWeatherData(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            return null;\r\n        })\r\n    }, [location])\r\n\r\n    \r\n\r\n    const inputChangeHandler = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const submitLocationHandler = (e) => {\r\n        e.preventDefault()\r\n        setLocation(inputValue)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"searchbar\" onSubmit={submitLocationHandler}>\r\n                <FontAwesomeIcon icon={faSearch} className=\"search-icon\"/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Type your location...\" \r\n                    style={{border: \"none\"}} \r\n                    value={inputValue} \r\n                    onChange={inputChangeHandler}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\LocationContext.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\WeatherDataContext.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\axios-config.js",[],["79","80"],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\API-KEY.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\utils\\backgrounds.js",["81"],"import ClearBackground from '../assets/weather-images/clear.jpg';\r\nimport CloudsBackground from '../assets/weather-images/clouds.jpg';\r\nimport DrizzleBackground from '../assets/weather-images/drizzle.jpg';\r\nimport DustBackground from '../assets/weather-images/dust.jpg';\r\nimport FogBackground from '../assets/weather-images/fog.jpg';\r\nimport HazeBackground from '../assets/weather-images/haze.jpg';\r\nimport MistBackground from '../assets/weather-images/mist.jpg';\r\nimport RainBackground from '../assets/weather-images/rain.png';\r\nimport SandBackground from '../assets/weather-images/sand.jpg';\r\nimport SmokeBackground from '../assets/weather-images/smoke.jpg';\r\nimport SnowBackground from '../assets/weather-images/snow.jpg';\r\nimport ThunderStormBackground from '../assets/weather-images/thunderstorm.jpg';\r\nimport TornadoBackground from '../assets/weather-images/tornado.jpg';\r\n\r\n\r\n\r\nexport default {\r\n    clear: ClearBackground,\r\n    clouds: CloudsBackground,\r\n    drizzle: DrizzleBackground,\r\n    dust: DustBackground,\r\n    fog: FogBackground,\r\n    haze: HazeBackground,\r\n    mist: MistBackground,\r\n    rain: RainBackground,\r\n    sand: SandBackground,\r\n    smoke: SmokeBackground,\r\n    snow: SnowBackground,\r\n    thunderstorm: ThunderStormBackground,\r\n    tornado: TornadoBackground\r\n};","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\QuoteContext.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\DetailsComponent\\DetailsComponent.js",["82","83","84"],"/*eslint eqeqeq:0*/\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { apiKey } from '../../API-KEY'; // Open weather api key\r\nimport apiKeyLocationIq from '../../API-KEY-LOCATIONIQ.JS'\r\nimport { LocationContext } from '../../contexts/LocationContext';\r\nimport WeatherCard from './WeatherCard/WeatherCard';\r\n\r\nimport './DetailsComponent.css';\r\n\r\n\r\n\r\nconst DetailsComponent = props => {\r\n\r\n    const [renderCards, setRenderCards] = useState(<h1>Loading...</h1>)\r\n\r\n    const fetchFiveDayWeather = (lat, lon) => {\r\n\r\n        // This function fetchs five day weather day from openwweathermap api using a given latitude and longitude values *getting from iqlocaiton api\r\n\r\n        axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=hourly,current,minutely&appid=${apiKey}`)\r\n        .then(res => {\r\n           let data = res.data.daily.slice(1, 6);\r\n           console.log(data)\r\n           data = data.map((item, index) => {\r\n               // Mock data from a diffrent location, just to fill the cards. I was unable to get this result from api for the given location so far.\r\n               let getDay = new Date().getDate() + index;\r\n               let getMonth = new Date().getMonth() + 1;\r\n               let date = `${getDay}/${getMonth < 10 ? '0' + getMonth : getMonth}`\r\n               return <WeatherCard \r\n                        key={item.dt} \r\n                        dayTemp={item.temp.day}\r\n                        maxTemp={item.temp.max}\r\n                        minTemp={item.temp.min}\r\n                        date={date}\r\n                        weatherResume={item.weather[0].description.toUpperCase()}\r\n                        />\r\n           })\r\n           setRenderCards(data);\r\n        })\r\n    }\r\n\r\n    const [location] = useContext(LocationContext);\r\n    useEffect(() => {\r\n\r\n        axios.get(`https://us1.locationiq.com/v1/search.php?key=pk.b28b1ed67d946cbafc8956dfeed7c921&q=${location}&format=json`)\r\n        .then(res => {\r\n            let lat = res.data[0].lat\r\n            let long = res.data[0].lon\r\n            fetchFiveDayWeather(lat, long);\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [location || props.showMore])\r\n\r\n    \r\n\r\n    return(\r\n        <div className={props.showMore ? 'open' : 'closed'} style={{transition: 'all 0.5s'}}>\r\n            <div className=\"card-wrapper\" style={{display: props.showMore ? 'flex' : 'none'}}>\r\n                {renderCards}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsComponent;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\DetailsComponent\\WeatherCard\\WeatherCard.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":14,"column":25,"nodeType":"91","messageId":"92","endLine":14,"endColumn":39},{"ruleId":"89","severity":1,"message":"93","line":1,"column":29,"nodeType":"91","messageId":"92","endLine":1,"endColumn":37},{"ruleId":"89","severity":1,"message":"94","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":12,"column":25,"nodeType":"91","messageId":"92","endLine":12,"endColumn":39},{"ruleId":"89","severity":1,"message":"95","line":19,"column":12,"nodeType":"91","messageId":"92","endLine":19,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":22,"column":43,"nodeType":"98","messageId":"99","endLine":22,"endColumn":44,"fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":30,"column":8,"nodeType":"103","endLine":30,"endColumn":18,"suggestions":"104"},{"ruleId":"85","replacedBy":"105"},{"ruleId":"87","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":1,"nodeType":"109","endLine":31,"endColumn":3},{"ruleId":"89","severity":1,"message":"110","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":55,"column":8,"nodeType":"103","endLine":55,"endColumn":36,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"113","line":55,"column":9,"nodeType":"114","endLine":55,"endColumn":35},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'setWeatherData' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'faEraser' is defined but never used.","'weatherData' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"117","text":"118"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["119"],["115"],["116"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'apiKeyLocationIq' is defined but never used.","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-global-assign","no-unsafe-negation",[724,735],"\r\n        .",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [location, setWeatherData]",{"range":"125","text":"126"},"Update the dependencies array to be: [location]",{"range":"127","text":"128"},[902,912],"[location, setWeatherData]",[2239,2267],"[location]"]