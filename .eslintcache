[{"C:\\Users\\Rony\\Desktop\\clock-app\\src\\index.js":"1","C:\\Users\\Rony\\Desktop\\clock-app\\src\\App.js":"2","C:\\Users\\Rony\\Desktop\\clock-app\\src\\reportWebVitals.js":"3","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\MainPage.js":"4","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Quote\\Quote.js":"5","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Content\\Content.js":"6","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\SearchBar\\SearchBar.js":"7","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\LocationContext.js":"8","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\WeatherDataContext.js":"9","C:\\Users\\Rony\\Desktop\\clock-app\\src\\axios-config.js":"10","C:\\Users\\Rony\\Desktop\\clock-app\\src\\API-KEY.js":"11","C:\\Users\\Rony\\Desktop\\clock-app\\src\\utils\\backgrounds.js":"12"},{"size":500,"mtime":1608773569226,"results":"13","hashOfConfig":"14"},{"size":566,"mtime":1609120645291,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607885306229,"results":"16","hashOfConfig":"14"},{"size":2033,"mtime":1609118967057,"results":"17","hashOfConfig":"14"},{"size":804,"mtime":1608773623750,"results":"18","hashOfConfig":"14"},{"size":827,"mtime":1609115918055,"results":"19","hashOfConfig":"14"},{"size":1703,"mtime":1609110963098,"results":"20","hashOfConfig":"14"},{"size":437,"mtime":1609109860933,"results":"21","hashOfConfig":"14"},{"size":451,"mtime":1609109358192,"results":"22","hashOfConfig":"14"},{"size":264,"mtime":1609120201332,"results":"23","hashOfConfig":"14"},{"size":57,"mtime":1609109589272,"results":"24","hashOfConfig":"14"},{"size":1288,"mtime":1609117422414,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qq9r1h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\Rony\\Desktop\\clock-app\\src\\index.js",[],["55","56"],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\App.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\reportWebVitals.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\MainPage.js",["57"],"import React, { useContext } from 'react';\r\n\r\nimport Backgrounds from '../../utils/backgrounds';\r\nimport { WeatherDataContext } from '../../contexts/WeatherDataContext';\r\n\r\nimport Quote from './Quote/Quote';\r\nimport Content from './Content/Content'\r\n\r\n\r\nimport './MainPage.css';\r\n\r\nconst MainPage = props => {\r\n\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext);\r\n\r\n    let background = Backgrounds.rain;\r\n\r\n    if(weatherData) {\r\n        switch(weatherData.weather[0].main) {\r\n            case \"Clear\":\r\n                background = Backgrounds.clear;\r\n                break;\r\n            case \"Clouds\":\r\n                background = Backgrounds.clouds;\r\n                break;\r\n            case \"Dust\":\r\n                background = Backgrounds.dust;\r\n                break;\r\n            case \"Sand\":\r\n                background = Backgrounds.sand;\r\n                break;\r\n            case \"Fog\":\r\n                background = Backgrounds.fog;\r\n                break;\r\n            case \"Haze\":\r\n                background = Backgrounds.haze;\r\n                break;\r\n            case \"Smoke\":\r\n                background = Backgrounds.smoke;\r\n                break;\r\n            case \"Mist\":\r\n                background = Backgrounds.mist;\r\n                break;\r\n            case \"Snow\":\r\n                background = Backgrounds.snow;\r\n                break;\r\n            case \"Rain\":\r\n                background = Backgrounds.rain;\r\n                break;\r\n            case \"Drizzle\":\r\n                background = Backgrounds.drizzle;\r\n                break;\r\n            case \"Thunderstorm\":\r\n                background = Backgrounds.thunderstorm;\r\n                break;\r\n            default:\r\n                background = Backgrounds.clear;\r\n                break;\r\n\r\n        };\r\n    };\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"main-page\" style={{backgroundImage: `url(${background})`}}>\r\n            <Quote />\r\n            <Content />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Quote\\Quote.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\Content\\Content.js",["58"],"import React, { useContext } from 'react';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { WeatherDataContext } from '../../../contexts/WeatherDataContext';\r\n\r\nimport './Content.css';\r\n\r\nconst Content = () => {\r\n\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext);\r\n\r\n\r\n    if(!weatherData) {\r\n        return <div>Error</div>\r\n    }\r\n\r\n    return(\r\n        <AnimateOnChange>\r\n            <div className=\"content\">\r\n                <span>{weatherData.weather[0].description.toUpperCase()}</span>\r\n                <span className=\"temperature\">{weatherData.main.temp.toFixed()}°</span>\r\n                <span>IN {weatherData.name.toUpperCase()}, {weatherData.sys.country.toUpperCase()}</span>\r\n            </div>\r\n        </AnimateOnChange>\r\n        \r\n    );\r\n};\r\n\r\nexport default Content;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\Components\\MainPage\\SearchBar\\SearchBar.js",["59","60","61"],"import React, { useContext, useState, useEffect} from 'react';\r\n\r\nimport axios from '../../../axios-config';\r\n\r\nimport { LocationContext } from '../../../contexts/LocationContext';\r\nimport { WeatherDataContext } from '../../../contexts/WeatherDataContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport './SearchBar.css'\r\n\r\nconst SearchBar = () => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('São paulo');\r\n    const [location, setLocation] = useContext(LocationContext);\r\n    const [weatherData, setWeatherData] = useContext(WeatherDataContext)\r\n\r\n    useEffect(() => {\r\n        axios.get(`weather?q=${location}`).\r\n        then(res => {\r\n            console.log(res.data);\r\n            setWeatherData(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            return null;\r\n        })\r\n    }, [location])\r\n\r\n    \r\n\r\n    const inputChangeHandler = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const submitLocationHandler = (e) => {\r\n        e.preventDefault()\r\n        setLocation(inputValue)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"searchbar\" onSubmit={submitLocationHandler}>\r\n                <FontAwesomeIcon icon={faSearch} className=\"search-icon\"/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Type your location...\" \r\n                    style={{border: \"none\"}} \r\n                    value={inputValue} \r\n                    onChange={inputChangeHandler}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\LocationContext.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\contexts\\WeatherDataContext.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\axios-config.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\API-KEY.js",[],"C:\\Users\\Rony\\Desktop\\clock-app\\src\\utils\\backgrounds.js",["62"],"import ClearBackground from '../assets/weather-images/clear.jpg';\r\nimport CloudsBackground from '../assets/weather-images/clouds.jpg';\r\nimport DrizzleBackground from '../assets/weather-images/drizzle.jpg';\r\nimport DustBackground from '../assets/weather-images/dust.jpg';\r\nimport FogBackground from '../assets/weather-images/fog.jpg';\r\nimport HazeBackground from '../assets/weather-images/haze.jpg';\r\nimport MistBackground from '../assets/weather-images/mist.jpg';\r\nimport RainBackground from '../assets/weather-images/rain.png';\r\nimport SandBackground from '../assets/weather-images/sand.jpg';\r\nimport SmokeBackground from '../assets/weather-images/smoke.jpg';\r\nimport SnowBackground from '../assets/weather-images/snow.jpg';\r\nimport ThunderStormBackground from '../assets/weather-images/thunderstorm.jpg';\r\nimport TornadoBackground from '../assets/weather-images/tornado.jpg';\r\n\r\n\r\n\r\nexport default {\r\n    clear: ClearBackground,\r\n    clouds: CloudsBackground,\r\n    drizzle: DrizzleBackground,\r\n    dust: DustBackground,\r\n    fog: FogBackground,\r\n    haze: HazeBackground,\r\n    mist: MistBackground,\r\n    rain: RainBackground,\r\n    sand: SandBackground,\r\n    smoke: SmokeBackground,\r\n    snow: SnowBackground,\r\n    thunderstorm: ThunderStormBackground,\r\n    tornado: TornadoBackground\r\n}",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":14,"column":25,"nodeType":"69","messageId":"70","endLine":14,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":10,"column":25,"nodeType":"69","messageId":"70","endLine":10,"endColumn":39},{"ruleId":"67","severity":1,"message":"71","line":19,"column":12,"nodeType":"69","messageId":"70","endLine":19,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":22,"column":43,"nodeType":"74","messageId":"75","endLine":22,"endColumn":44,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":31,"column":8,"nodeType":"79","endLine":31,"endColumn":18,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":17,"column":1,"nodeType":"83","endLine":31,"endColumn":2},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'setWeatherData' is assigned a value but never used.","Identifier","unusedVar","'weatherData' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"86","text":"87"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["88"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[724,735],"\r\n        .",{"desc":"89","fix":"90"},"Update the dependencies array to be: [location, setWeatherData]",{"range":"91","text":"92"},[938,948],"[location, setWeatherData]"]